(window.webpackJsonp=window.webpackJsonp||[]).push([[530],{1025:function(s,t,a){"use strict";a.r(t);var r=a(30),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-kubernetes"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#docker-kubernetes"}},[s._v("#")]),s._v(" Docker && Kubernetes")]),s._v(" "),a("h2",{attrs:{id:"docker镜像与容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像与容器"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#docker%E9%95%9C%E5%83%8F%E4%B8%8E%E5%AE%B9%E5%99%A8"}},[s._v("#")]),s._v(" Docker镜像与容器")]),s._v(" "),a("p",[s._v("Docker 中有两个重要概念。")]),s._v(" "),a("p",[s._v("一个是容器（Container）：容器特别像一个虚拟机，容器中运行着一个完整的操作系统。可以在容器中装 Nodejs，可以执行npm install，可以做一切你当前操作系统能做的事情")]),s._v(" "),a("p",[s._v("另一个是镜像（Image）：镜像是一个文件，它是用来创建容器的。如果你有装过 Windows 操作系统，那么 Docker 镜像特别像“Win7纯净版.rar”文件")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/images-1/58.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"docker流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker流程"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#docker%E6%B5%81%E7%A8%8B"}},[s._v("#")]),s._v(" Docker流程")]),s._v(" "),a("p",[s._v("容器运行程序,容器是镜像创建出来,镜像是通过一个 Dockerfile 打包来的，它非常像我们前端的package.json文件.")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Dockerfile")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 类似于“"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json”\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("V")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Image")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 类似于“Win7纯净版"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rar”\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("V")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Container")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("一个完整操作系统")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("实例"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ol",[a("li",[s._v("配置Dockerfile文件")])]),s._v(" "),a("p",[s._v("EXPOSE 指令是声明运行时容器提供服务端口，"),a("strong",[s._v("这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务")]),s._v("。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("share"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXPOSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("打包镜像Image")])]),s._v(" "),a("p",[s._v("Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    # 基于路径"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("（当前路径）打包一个镜像，镜像的名字是hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("docker，版本号是"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("。\n    # 该命令会自动寻找Dockerfile来打包出一个镜像，在本地\n    docker image build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("\n    \n    # docker pull ubunttu # 下载官方已经做好的镜像源到本地\n    docker image ls # 查看本机打包的镜像列表\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("运行容器（基于镜像上）")])]),s._v(" "),a("p",[s._v("镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的 类 和 实例 一样。")]),s._v(" "),a("p",[s._v("创建基于hello-docker:1.0.0镜像的一个容器。使用-p来指定端口绑定——将容器80端口绑定在宿主机的2333端口。执行完该命令，会返回一个容器ID")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    docker container create "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2333")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("\n    docker container start xxx # xxx 为上一条命令运行得到的结果\n    # 以上等价于以下一条命令\n    # docker run "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2333")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("\n    \n    docker containers ls # 查看当前运行的容器\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"docker-cli命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-cli命令"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#docker-cli%E5%91%BD%E4%BB%A4"}},[s._v("#")]),s._v(" Docker-CLI命令")]),s._v(" "),a("p",[s._v("docker image/container命令可以简写，比如docker pull/build命令简写image，docker run简写container")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IMAGE_NAME")]),s._v(" # 打包本地dockerfile\n    docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IMAGE_NAME")]),s._v(" # 拉取远程docker到本地\n    docker image ls # 查看image列表\n    docker image rm "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IMAGE_ID")]),s._v(" # 删除指定image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("等价于docker rmi "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IMAGE_ID")]),s._v("\n    \n    docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p 映射端口"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("容器端口 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IMAGE")]),s._v(" # 实例化化容器\n    docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" stop "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CONTAINER_ID")]),s._v(" # 停止容器运行\n    docker exec "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("it "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CONTAINER_ID")]),s._v(" bash # 进入指定容器里面，bash是进入命令界面\n    docker container ls # 列出正在跑的container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("等价docker ps\n    docker container ls "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a # 列出所有实例化的container， "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a表示列出所有all\n    docker container rm "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CONTAINER_ID")]),s._v(" # 删除实例化容器（正在运行的容器需要先停止才能删除成功）\n    \n    # 批量处理\n    docker stop "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("docker ps "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("aq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" # 停止所有的container（容器），这样才能够删除其中的images\n    docker rm "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("docker ps "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("aq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" # 删除所有container\n    docker rmi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("f "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("docker images "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" # 强制删除全部image\n    docker system prune # 清除docker无用的对象\n    \n    # 上传到远程仓库，类似github上传。\n    # 远程仓库带上你的namespace，如果不带就表示官方仓库，你没有这权限push\n    docker login\n    docker tag "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOCAL_IMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VERSION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("YOUR_NAMESPACE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOCAL_IMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VERSION")]),s._v("\n    docker push "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("YOUR_NAMESPACE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOCAL_IMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VERSION")]),s._v("\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h2",{attrs:{id:"dockerfile命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile命令"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#dockerfile%E5%91%BD%E4%BB%A4"}},[s._v("#")]),s._v(" Dockerfile命令")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    # 第一阶段：build\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.9")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" build"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("stage # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v("：基础镜像\n    \n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WORKDIR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WORKDIR")]),s._v("：指定docker工作空间，后面可以把"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("代指"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app\n    \n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v("：把本机文件拷贝进docker中"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),s._v(" npm install # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 执行命令\n    \n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),s._v(" npm run build\n    \n    # 第二阶段：部署  # 多阶段构建\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" nginx\n    \n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("from"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("stage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dist "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("share"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("html # "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("from参数，从前一步的dist目录，拷贝到nginx目录下\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXPOSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8088")]),s._v("\n    \n    # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./app-server"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CMD")]),s._v("：指定默认的容器主进程的启动命令\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"docker-cmd-vs-entrypoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-cmd-vs-entrypoint"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#docker-cmd-vs-entrypoint"}},[s._v("#")]),s._v(" Docker CMD VS ENTRYPOINT")]),s._v(" "),a("p",[s._v("因为CMD命令很容易被docker run命令的方式覆盖, 所以, 如果你希望你的docker镜像的功能足够灵活, 建议在Dockerfile里调用CMD命令. 比如, 你可能有一个通用的Ruby镜像, 这个镜像启动时默认执行irb (CMD irb).")]),s._v(" "),a("p",[s._v("相反, ENTRYPOINT的作用不同, 如果你希望你的docker镜像只执行一个具体程序, 不希望用户在执行docker run的时候随意覆盖默认程序. 建议用ENTRYPOINT.")]),s._v(" "),a("blockquote",[a("p",[s._v("清除docker无用的对象：docker system prune。清除所有docker image：docker image prune -a")])]),s._v(" "),a("h2",{attrs:{id:"kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#kubernetes"}},[s._v("#")]),s._v(" Kubernetes")]),s._v(" "),a("p",[s._v("K8S，就是基于容器的集群管理平台，它的全称，是kubernetes。Kubernetes 是一个可移植的、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 的本质是通过声明式配置对应用进行生命周期管理，具体说是部署和管理（扩缩容、自动恢复、发布）。Kubernetes 为微服务提供了可扩展、高弹性的部署和管理平台。")]),s._v(" "),a("blockquote",[a("p",[s._v("简单说就是容器也要管理，因为docker container多了也要进行管理，k8s是container管理和监控者。")])]),s._v(" "),a("h3",{attrs:{id:"_1-pod-deploy-核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pod-deploy-核心"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#_1-pod-deploy-%E6%A0%B8%E5%BF%83"}},[s._v("#")]),s._v(" 1. Pod/Deploy（核心）")]),s._v(" "),a("p",[s._v("pod是最基本资源，把docker container放在里面运行；rc监控pod；service是个中介者，对外提供服务，对内连接pod。")]),s._v(" "),a("ul",[a("li",[s._v("pod是基本操作单元，也是应用运行的载体。整个k8s都是围绕着pod展开，比如如何部署运行pod，如何保证pod的数量，如何访问pod等。")]),s._v(" "),a("li",[s._v("Deployment定义了pod部署的信息")]),s._v(" "),a("li",[s._v("若干pod副本（副本是一个pod的多个实例）组成service，对外提供服务")])]),s._v(" "),a("p",[a("code",[s._v("Pod配置必需设置image，可选：注入env数据、启动命令command")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    kubectl run k8s"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("image "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" # 使用k8s建立pod，pod包含指定docker image\n    kubectl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" pods\n    kubectl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" rc\n    kubectl scale rc k8s"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("replicas"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" # 扩充pod到"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("个，"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("个服务支持（负载均衡）\n    \n    kubectl expose rc k8s"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("name # 为前面创建的rc，对外提供service\n    kubectl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" services\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("blockquote",[a("p",[s._v("kubectl是管理k8s集群的cli工具")])]),s._v(" "),a("h3",{attrs:{id:"_2-services-opens-new-window-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-services-opens-new-window-服务"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#_2-services-%E6%9C%8D%E5%8A%A1"}},[s._v("#")]),s._v(" 2. "),a("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Services (opens new window)"),a("OutboundLink")],1),s._v("(服务)")]),s._v(" "),a("p",[s._v("Services为Pods提供自己的IP地址和一组Pod的单个DNS名称，并且可以在它们之间进行负载平衡。")]),s._v(" "),a("p",[s._v("前面虽然创建了 Pod，但是在 kubernetes 中，Pod 的 IP 地址会随着 Pod 的重启而变化，并不建议直接拿 Pod 的 IP 来交互。那如何来访问这些 Pod 提供的服务呢？使用 Service。Service 为一组 Pod（通过 labels 来选择）提供一个统一的入口，并为它们提供负载均衡和自动服务发现。")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Service： kubectl -n kubeflow get svc deep-fed-platform -o yaml")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("              deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Namespace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("         kubeflow\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Labels")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Annotations")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Selector")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("          name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform # 匹配的pod\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("              ClusterIP\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.178")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".5")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".190")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unset"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("TargetPort")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Endpoints")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.177")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".6")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    Session Affinity"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  None\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Events")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"_3-virtualservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-virtualservice"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#_3-virtualservice"}},[s._v("#")]),s._v(" 3. VirtualService")]),s._v(" "),a("p",[s._v("VirtualService 是流量控制的核心组件，起着承上（Gateway）启下（DestinationRule）的作用。")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// VirtualService:kubectl -n kubeflow describe vs deep-fed-platform")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("         deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Namespace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("    kubeflow\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Labels")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("       app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform\n                  app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("instance"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.0")]),s._v("\n                  app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("managed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("by"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kfctl\n                  app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform\n                  app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("part"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubeflow\n                  app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Annotations")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  networking"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("istio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("v1alpha3\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Kind")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("         VirtualService\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Spec")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Gateways")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        kubeflow"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("gateway\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Hosts")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 网站匹配规则")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Http")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Match")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 匹配的path")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Uri")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Rewrite")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Uri")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Route")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Destination")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标流量，以下是在services上")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  deep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("platform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kubeflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("svc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("local # "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 模式\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h3",{attrs:{id:"_4-volumes-opens-new-window-存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-volumes-opens-new-window-存储"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#_4-volumes-%E5%AD%98%E5%82%A8"}},[s._v("#")]),s._v(" 4. "),a("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/storage/volumes/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Volumes (opens new window)"),a("OutboundLink")],1),s._v("(存储)")]),s._v(" "),a("p",[s._v("容器中的文件在磁盘上是临时存放的，这给容器中运行的特殊应用程序带来一些问题。 首先，当容器崩溃时，kubelet 将重新启动容器，容器中的文件将会丢失——因为容器会以干净的状态重建。 其次，当在一个 Pod 中同时运行多个容器时，常常需要在这些容器之间共享文件。 Kubernetes 抽象出 Volume 对象来解决这两个问题。")]),s._v(" "),a("p",[s._v("使用卷时, Pod 声明中需要提供卷的类型 (.spec.volumes 字段)和卷挂载的位置 (.spec.containers.volumeMounts 字段).")]),s._v(" "),a("h3",{attrs:{id:"_5-kubernetes-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-kubernetes-operator"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#_5-kubernetes-operator"}},[s._v("#")]),s._v(" 5. Kubernetes Operator")]),s._v(" "),a("p",[s._v("基于k8s上层进行的扩展。扩展的核心是"),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/67567555",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubernetes Operator (opens new window)"),a("OutboundLink")],1),s._v("`。")]),s._v(" "),a("blockquote",[a("p",[s._v("label/selector标签匹配")])]),s._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("ul",[a("li",[s._v("https://docs.docker.com/get-started/part2/")]),s._v(" "),a("li",[s._v("https://zhuanlan.zhihu.com/p/83309276?utm_medium=social&utm_source=wechat_session")]),s._v(" "),a("li",[s._v("https://www.youtube.com/watch?v=wnKyJKqKiVE k8s入门视频，推荐")]),s._v(" "),a("li",[s._v("https://kubernetes.io/docs/setup/learning-environment/minikube/")]),s._v(" "),a("li",[s._v("https://linuxize.com/post/how-to-remove-docker-images-containers-volumes-and-networks/")])])])}),[],!1,null,null,null);t.default=e.exports}}]);