(window.webpackJsonp=window.webpackJsonp||[]).push([[480],{975:function(t,a,e){"use strict";e.r(a);var v=e(30),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mvc、mvp、mvvm区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc、mvp、mvvm区别"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#mvc%E3%80%81mvp%E3%80%81mvvm%E5%8C%BA%E5%88%AB"}},[t._v("#")]),t._v(" MVC、MVP、MVVM区别")]),t._v(" "),e("p",[t._v("软件中最核心的，最基本的东西是什么? 是数据，我们写的所有代码，都是围绕数据的。")]),t._v(" "),e("p",[t._v("围绕着数据的产生、修改等变化，出现了业务逻辑。")]),t._v(" "),e("p",[t._v("围绕着数据的显示，出现了不同的界面技术。")]),t._v(" "),e("h2",{attrs:{id:"mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),e("p",[t._v("网上很多资料对MVC看似有矛盾，其实是因为MVC模式主流分为"),e("code",[t._v("主动MVC")]),t._v("和"),e("code",[t._v("被动MVC")]),t._v("两种。")]),t._v(" "),e("h3",{attrs:{id:"主动mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主动mvc"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E4%B8%BB%E5%8A%A8mvc"}},[t._v("#")]),t._v(" 主动MVC")]),t._v(" "),e("p",[t._v("主动MVC也是对应着传统MVC理论思想，其中的主动是表示，Model变化会主动通知View更新。")]),t._v(" "),e("p",[e("code",[t._v("Modal")]),t._v(": 封装与应用程序的业务逻辑相关的数据以及对数据的处理方法。不要认为Modal是数据库的Entity层，其实理解为业务层更恰当。")]),t._v(" "),e("p",[e("code",[t._v("View")]),t._v(": 负责数据的展示，因为是Modal主动更新View，所以View需要事先订阅Modal的变化")]),t._v(" "),e("p",[e("code",[t._v("Controller")]),t._v(": M和V之间的连接器，接受View层的变化并更新到Modal上")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/images-1/14.png",alt:""}})]),t._v(" "),e("h3",{attrs:{id:"被动mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#被动mvc"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E8%A2%AB%E5%8A%A8mvc"}},[t._v("#")]),t._v(" 被动MVC")]),t._v(" "),e("p",[t._v("这是常规Web MVC框架使用的模式，如ASP .NET MVC，Struts。Controller是一个核心层，负责管理View和Modal。")]),t._v(" "),e("p",[t._v("被动MVC中，模型Modal对视图View和控制器Controller一无所知，仅仅是被使用。视图也不会主动订阅Modal的更新。视图的显示是根据控制器来决定。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/images-1/15.png",alt:"image"}})]),t._v(" "),e("h3",{attrs:{id:"实际项目应用mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实际项目应用mvc"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE%E5%BA%94%E7%94%A8mvc"}},[t._v("#")]),t._v(" 实际项目应用MVC")]),t._v(" "),e("p",[t._v("实际项目中，对MVC的应用往往采用更灵活的方式，除了每层各司其职外，还需要加入用户的交互指令。")]),t._v(" "),e("p",[t._v("如果你熟悉"),e("code",[t._v("ASP .NET MVC")]),t._v("，一定对以下这张图不陌生。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/images-1/16.png",alt:"image"}})]),t._v(" "),e("p",[t._v("如果你熟悉"),e("code",[t._v("Backbond")]),t._v("，则更复杂些。用户既可以通过发送DOM事件到View，View再要求Model发生改变。也可以通过URL改变触发Controller层，从而改变View。Backbond View层比较重而Controller比较轻。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/images-1/17.png",alt:"image"}})]),t._v(" "),e("h2",{attrs:{id:"mvp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvp"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#mvp"}},[t._v("#")]),t._v(" MVP")]),t._v(" "),e("p",[t._v("MVP是MVC的一种变种，其跟传统的MVC不同的表现在:")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("View层和Modal层没有直接关系，都是通过Presenter传递")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Presenter与View层通信是双向的")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/images-1/18.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),e("p",[t._v("MVVM跟MVP基本类似，Presenter替换为ViewModal。其区别是"),e("strong",[t._v("MVVM通过双向数据绑定(通过事件同步到ViewModal和View)来进行View和ViewModal的同步")]),t._v("。Vue、Angular、Ember都是采用这种模式。")]),t._v(" "),e("p",[t._v("MVVM使得前后端分离更加彻底。前端不再仅仅是UI层展示，可以将后端更多的业务逻辑搬到前端进行处理，后台除了提供常规的数据库业务数据，有更多的精力去专注于保持系统稳定和可扩展性。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/images-1/19.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[t._v("#")]),t._v(" 参考文章：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.nodejitsu.com/scaling-isomorphic-javascript-code/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scaling Isomorphic Javascript Code (opens new window)"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰 MVC，MVC，MVP 和 MVVM 的图示 (opens new window)"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/ffcb84dc4ebc",target:"_blank",rel:"noopener noreferrer"}},[t._v("开发中的MVVM模式及与MVP和MVC的区别 (opens new window)"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);